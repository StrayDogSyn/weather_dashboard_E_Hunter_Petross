[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "weather-dashboard"
version = "1.0.0"
authors = [
    {name = "E Hunter Petross", email = "example@example.com"},
]
description = "A comprehensive weather dashboard with modern GUI and ML predictions"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "matplotlib>=3.7.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0",
    "joblib>=1.3.0",
    "ttkbootstrap>=1.10.1",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
"Homepage" = "https://github.com/StrayDogSyn/weather_dashboard_E_Hunter_Petross"
"Bug Reports" = "https://github.com/StrayDogSyn/weather_dashboard_E_Hunter_Petross/issues"
"Source" = "https://github.com/StrayDogSyn/weather_dashboard_E_Hunter_Petross"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.venv
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".venv", "__pycache__"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "F401", "F841", "E501", "E402"]
exclude = [".venv", "__pycache__", ".git", "build", "dist"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
